apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'io.fabric'
apply plugin: 'com.cookpad.android.licensetools'
apply plugin: 'spoon'

android {
    signingConfigs {
        releaseConfig
    }

    compileSdkVersion 25
    buildToolsVersion "21.1.2"
    defaultConfig {
        applicationId "me.rei_m.hbfavmaterial"
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 12
        versionName "1.2.5"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            debuggable true
            applicationIdSuffix ".debug"
            versionNameSuffix "d"
            ext.enableCrashlytics = false
        }
        release {
            signingConfig signingConfigs.releaseConfig
            debuggable false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'

        androidTest.java.srcDirs += 'src/androidTest/kotlin'

        test.java.srcDirs += 'src/test/kotlin'
    }

    if (project.hasProperty('storeFile')) {
        android.signingConfigs.releaseConfig.storeFile = file(storeFile)
    }
    if (project.hasProperty('storePassword')) {
        android.signingConfigs.releaseConfig.storePassword = storePassword
    }
    if (project.hasProperty('keyAlias')) {
        android.signingConfigs.releaseConfig.keyAlias = keyAlias
    }
    if (project.hasProperty('keyPassword')) {
        android.signingConfigs.releaseConfig.keyPassword = keyPassword
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }

    testBuildType "debug"
}

kapt {
    generateStubs = true
}

dependencies {
    ext.android_support_lib_version = '25.0.0'
    ext.rx_android_kotlin_version = '0.4.0'
    ext.retrofit_version = '2.1.0'
    ext.okhttp_version = '3.4.2'
    compile fileTree(include: ['*.jar'], dir: 'libs')

    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "com.android.support:appcompat-v7:$android_support_lib_version"
    compile "com.android.support:support-v4:$android_support_lib_version"
    compile "com.android.support:design:$android_support_lib_version"
    compile "com.android.support:support-annotations:$android_support_lib_version"

    provided 'org.glassfish:javax.annotation:10.0-b28'

    compile 'io.reactivex:rxandroid:1.2.1'
    compile 'io.reactivex:rxjava:1.2.2'
    compile "com.jakewharton.rxbinding:rxbinding-kotlin:$rx_android_kotlin_version"
    compile "com.jakewharton.rxbinding:rxbinding-support-v4-kotlin:$rx_android_kotlin_version"
    compile "com.jakewharton.rxbinding:rxbinding-appcompat-v7-kotlin:$rx_android_kotlin_version"
    compile 'com.google.dagger:dagger:2.7'
    kapt 'com.google.dagger:dagger-compiler:2.7'
    kaptAndroidTest 'com.google.dagger:dagger-compiler:2.7'

    compile 'com.google.code.gson:gson:2.8.0'
    compile "com.squareup.okhttp3:okhttp:$okhttp_version"
    compile "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    compile 'se.akerfeldt:okhttp-signpost:1.1.0'
    compile "com.squareup.retrofit2:retrofit:$retrofit_version"
    compile "com.squareup.retrofit2:adapter-rxjava:$retrofit_version"
    compile("com.squareup.retrofit2:converter-simplexml:$retrofit_version") {
        exclude module: 'stax'
        exclude module: 'stax-api'
        exclude module: 'xpp3'
    }
    compile "com.squareup.retrofit2:converter-gson:$retrofit_version"
    compile "com.squareup.retrofit2:converter-scalars:$retrofit_version"
    compile 'com.squareup.picasso:picasso:2.5.2'
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
    testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
    androidTestCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
    compile 'org.jsoup:jsoup:1.10.1'

    compile('com.crashlytics.sdk.android:crashlytics:2.6.5@aar') {
        transitive = true;
    }
    compile('com.twitter.sdk.android:twitter:2.1.1@aar') {
        transitive = true;
    }
    compile 'com.google.firebase:firebase-core:9.8.0'

    testCompile "org.robolectric:robolectric:3.1.4"
    testCompile "org.robolectric:shadows-support-v4:3.1.4"

    testCompile 'junit:junit:4.12'

    testCompile 'org.mockito:mockito-core:2.2.11'

    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2') {
        exclude module: 'support-annotations'
    }
    androidTestCompile('com.android.support.test.espresso:espresso-intents:2.2.2') {
        exclude module: 'support-annotations'
    }
    androidTestCompile('com.android.support.test:runner:0.5') {
        exclude module: 'support-annotations'
    }
    androidTestCompile('com.android.support.test:rules:0.5') {
        exclude module: 'support-annotations'
    }
    androidTestCompile 'org.mockito:mockito-core:1.10.19'
    androidTestCompile 'com.google.dexmaker:dexmaker:1.2'
    androidTestCompile 'com.google.dexmaker:dexmaker-mockito:1.2'
    androidTestCompile group: 'com.squareup.spoon', name: 'spoon-client', version: '1.7.0'
}

spoon {
    // for debug output
    debug = true

    // To execute the tests device by device */
    sequential = true

    // To grant permissions to Android M >= devices */
    grantAllPermissions = true
}

repositories {
    mavenCentral()
    maven {
        url "http://dl.bintray.com/kotlin/kotlinx.dom"
    }
    maven {
        url 'https://maven.fabric.io/public'
    }
}

apply plugin: 'com.google.gms.google-services'
